# Pre-commit: fast, reliable, and low-noise checks for this repo.
# Order matters: formatters/fixers run before pure linters.
# Primary tools: Ruff (lint + format), Codespell, and hygiene hooks.

ci:
  autofix_prs: false
  autoupdate_schedule: monthly

minimum_pre_commit_version: "3.7.0"

default_language_version:
  python: python3

# Skip large/generated artifacts and caches to keep hooks snappy.
exclude: >
  (?x)^(
    results/|
    figs/|
    data/|
    dist/|
    build/|
    reports/|
    docs/_build/|
    .mypy_cache/|
    .ruff_cache/|
    .pytest_cache/|
    .tox/|
    .venv/|
    venv/|
    .*\.ipynb_checkpoints/|
    .*__pycache__/|
    .*\.egg-info/
  )

repos:
  # --- Hygiene & quick structural checks ------------------------------------
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: end-of-file-fixer
      - id: trailing-whitespace
        exclude_types: [markdown]
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]
      - id: check-added-large-files
        args: [--maxkb=1024]
  # Optionally protect main branches from direct commits.
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]

  # --- Ruff: formatter + linter (ultra-fast, replaces black+isort+flake8) ---
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.2
    hooks:
      # Lint and auto-fix (includes import sorting via rule I***).
      - id: ruff-check
        name: ruff (lint+fix)
        args: [--fix]
        types_or: [python, pyi, jupyter]
      # Code formatter (Black-compatible).
      - id: ruff-format
        name: ruff (format)
        types_or: [python, pyi, jupyter]

  # --- Markdown: format and keep tables/links tidy ---------------------------
  - repo: https://github.com/hukkin/mdformat
    rev: 0.7.22
    hooks:
      - id: mdformat
        name: mdformat (GFM + ruff for code fences)
        types: [markdown]
        additional_dependencies:
          - mdformat-gfm
          - mdformat-ruff
          - ruff==0.13.2

  # --- YAML style (beyond syntax-only check-yaml) ----------------------------
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        args: [--strict]

  # --- Spelling across text files -------------------------------------------
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        # Maintain a project-specific ignore list if needed.
        args: ["--ignore-words=.codespellignorewords.txt"]
        types: [text]
        exclude: >
          (?x)^(
            .*\.lock$|
            .*\.svg$|
            .*min\.js$|
            data/|
            results/
          )

  # --- Notebooks: strip output to keep diffs small ---------------------------
  - repo: https://github.com/kynan/nbstripout
    rev: 0.8.1
    hooks:
      - id: nbstripout
        types: [jupyter]

  # --- Notebooks: run codespell on markdown/code cells -----------------------
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.9.1
    hooks:
      - id: nbqa
        name: nbqa-codespell
        args: ["codespell", "--ignore-words=.codespellignorewords.txt"]
        files: \.ipynb$

  # --- Project metadata formatting -------------------------------------------
  - repo: https://github.com/tox-dev/pyproject-fmt
    rev: v2.6.0
    hooks:
      - id: pyproject-fmt

  # --- Optional: static typing on push (kept light for speed) ----------------
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.18.2
    hooks:
      - id: mypy
        name: mypy (push-only)
        stages: [push]
        files: ^(src|tests)/.*\.py$
        args: ["--ignore-missing-imports"]
        additional_dependencies:
          - types-PyYAML
          - numpy
